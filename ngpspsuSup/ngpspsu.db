### Records for NGPS PSU IOC ###

record(bo, "$(P)DISABLE"){
    field(DESC, "Disable comms")
    field(PINI, "YES")
    field(VAL, "$(DISABLE=0)")
    field(OMSL, "supervisory")
    field(ZNAM, "COMMS ENABLED")
    field(ONAM, "COMMS DISABLED")
}

record (stringin, "$(P)VERSION"){
	field(DESC, "Model number and firmware version")
    field(DTYP, "stream")
	field(INP,  "@ngpspsu.proto get_version($(P)) $(PORT)")
	
	field(SDIS, "$(P)DISABLE")
}

# ON/OFF records

record (bo, "$(P)ON_OFF:SP"){
    field(DESC, "Setpoint to turn module on or off")
    field(DTYP, "Soft Channel")
    field(FLNK, "$(P)ON_OFF:SP:_SEND_IF_OK")
    
    field(SDIS, "$(P)DISABLE")
    info(archive, "VAL")
}

record (calcout, "$(P)ON_OFF:SP:_SEND_IF_OK"){
    field(INPA, "$(P)ON_OFF:SP")
    field(INPB, "$(P)STAT:ON_OFF")
	
    field(CALC, "A!=B") # Prevents resending a setpoint if that setpoint was already set.
	field(OOPT, "When Non-zero")
    field(DOPT, "Use OCAL")
    field(OCAL, "A")
	field(OUT, "$(P)ON_OFF:SP:RAW CA PP")
}

record (bo, "$(P)ON_OFF:SP:RAW"){
    field(DESC, "Raw setpoint to turn module on or off")
    field(DTYP, "stream")
    field(OUT,  "@ngpspsu.proto turn_on_or_off($(P)) $(PORT)")
    
	info(archive, "VAL")
    field(SDIS, "$(P)DISABLE")
}

# Reset the device

record (bo, "$(P)RESET:SP"){
    field(DESC, "Resets the device")
    field(DTYP, "stream")
    field(OUT,  "@ngpspsu.proto reset($(P)) $(PORT)")
    
    info(archive, "VAL")
    field(SDIS, "$(P)DISABLE")
}

# Status records  

record(stringin, "$(P)READ:STAT"){
    field(DESC, "Reads the status of the device.")
    field(SCAN, "1 second")
    field(INP, "@ngpspsu.proto read_status($(P)) $(PORT)")
    field(DTYP, "stream")
    field(SDIS, "$(P)DISABLE")
}

record(bi, "$(P)STAT:ON_OFF") {
	field(DESC, "On/off status")
	field(INP, "$(P)STAT:HEX:1.B0 CP MS")
	field(ZNAM, "OFF")
	field(ONAM, "ON")
    
	info(ARCHIVE, "VAL")
	info(INTEREST, "MEDIUM")
    field(SDIS, "$(P)DISABLE")
}

#
# All Status Hex character PVs can be found in status_hex.db
#

# Error records

record(stringin, "$(P)ERROR") {
	field(DESC, "Catches error codes.")
    field(DTYP, "Soft Channel")
    field(SCAN, "Passive") # Only triggered by mismatch handler
    field(PINI, "YES")
    field(VAL, "0")
    
    
	info(ARCHIVE, "VAL")
	info(INTEREST, "HIGH")
    field(SDIS, "$(P)DISABLE")
}
